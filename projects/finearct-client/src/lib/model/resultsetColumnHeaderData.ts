/**
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 1.11.0-SNAPSHOT
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface ResultsetColumnHeaderData { 
    booleanDisplayType?: boolean;
    codeLookupDisplayType?: boolean;
    codeValueDisplayType?: boolean;
    columnCode?: string;
    columnDisplayType?: ResultsetColumnHeaderData.ColumnDisplayTypeEnum;
    columnLength?: number;
    columnName?: string;
    columnType?: ResultsetColumnHeaderData.ColumnTypeEnum;
    columnValues?: Array<object>;
    dateDisplayType?: boolean;
    dateTimeDisplayType?: boolean;
    decimalDisplayType?: boolean;
    integerDisplayType?: boolean;
    isColumnIndexed?: boolean;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
    isColumnUnique?: boolean;
    mandatory?: boolean;
    stringDisplayType?: boolean;
    textDisplayType?: boolean;
    timeDisplayType?: boolean;
}
export namespace ResultsetColumnHeaderData {
    export type ColumnDisplayTypeEnum = 'TEXT' | 'STRING' | 'INTEGER' | 'FLOAT' | 'DECIMAL' | 'DATE' | 'TIME' | 'DATETIME' | 'BOOLEAN' | 'BINARY' | 'CODELOOKUP' | 'CODEVALUE';
    export const ColumnDisplayTypeEnum = {
        Text: 'TEXT' as ColumnDisplayTypeEnum,
        String: 'STRING' as ColumnDisplayTypeEnum,
        Integer: 'INTEGER' as ColumnDisplayTypeEnum,
        Float: 'FLOAT' as ColumnDisplayTypeEnum,
        Decimal: 'DECIMAL' as ColumnDisplayTypeEnum,
        Date: 'DATE' as ColumnDisplayTypeEnum,
        Time: 'TIME' as ColumnDisplayTypeEnum,
        Datetime: 'DATETIME' as ColumnDisplayTypeEnum,
        Boolean: 'BOOLEAN' as ColumnDisplayTypeEnum,
        Binary: 'BINARY' as ColumnDisplayTypeEnum,
        Codelookup: 'CODELOOKUP' as ColumnDisplayTypeEnum,
        Codevalue: 'CODEVALUE' as ColumnDisplayTypeEnum
    };
    export type ColumnTypeEnum = 'BIT' | 'BOOLEAN' | 'SMALLINT' | 'TINYINT' | 'INTEGER' | 'MEDIUMINT' | 'BIGINT' | 'REAL' | 'FLOAT' | 'DOUBLE' | 'NUMERIC' | 'DECIMAL' | 'SERIAL' | 'SMALLSERIAL' | 'BIGSERIAL' | 'MONEY' | 'CHAR' | 'VARCHAR' | 'LONGVARCHAR' | 'TEXT' | 'TINYTEXT' | 'MEDIUMTEXT' | 'LONGTEXT' | 'JSON' | 'DATE' | 'TIME' | 'TIME_WITH_TIMEZONE' | 'TIMESTAMP' | 'DATETIME' | 'TIMESTAMP_WITH_TIMEZONE' | 'INTERVAL' | 'BINARY' | 'VARBINARY' | 'LONGVARBINARY' | 'BYTEA' | 'BLOB' | 'TINYBLOB' | 'MEDIUMBLOB' | 'LONGBLOB';
    export const ColumnTypeEnum = {
        Bit: 'BIT' as ColumnTypeEnum,
        Boolean: 'BOOLEAN' as ColumnTypeEnum,
        Smallint: 'SMALLINT' as ColumnTypeEnum,
        Tinyint: 'TINYINT' as ColumnTypeEnum,
        Integer: 'INTEGER' as ColumnTypeEnum,
        Mediumint: 'MEDIUMINT' as ColumnTypeEnum,
        Bigint: 'BIGINT' as ColumnTypeEnum,
        Real: 'REAL' as ColumnTypeEnum,
        Float: 'FLOAT' as ColumnTypeEnum,
        Double: 'DOUBLE' as ColumnTypeEnum,
        Numeric: 'NUMERIC' as ColumnTypeEnum,
        Decimal: 'DECIMAL' as ColumnTypeEnum,
        Serial: 'SERIAL' as ColumnTypeEnum,
        Smallserial: 'SMALLSERIAL' as ColumnTypeEnum,
        Bigserial: 'BIGSERIAL' as ColumnTypeEnum,
        Money: 'MONEY' as ColumnTypeEnum,
        Char: 'CHAR' as ColumnTypeEnum,
        Varchar: 'VARCHAR' as ColumnTypeEnum,
        Longvarchar: 'LONGVARCHAR' as ColumnTypeEnum,
        Text: 'TEXT' as ColumnTypeEnum,
        Tinytext: 'TINYTEXT' as ColumnTypeEnum,
        Mediumtext: 'MEDIUMTEXT' as ColumnTypeEnum,
        Longtext: 'LONGTEXT' as ColumnTypeEnum,
        Json: 'JSON' as ColumnTypeEnum,
        Date: 'DATE' as ColumnTypeEnum,
        Time: 'TIME' as ColumnTypeEnum,
        TimeWithTimezone: 'TIME_WITH_TIMEZONE' as ColumnTypeEnum,
        Timestamp: 'TIMESTAMP' as ColumnTypeEnum,
        Datetime: 'DATETIME' as ColumnTypeEnum,
        TimestampWithTimezone: 'TIMESTAMP_WITH_TIMEZONE' as ColumnTypeEnum,
        Interval: 'INTERVAL' as ColumnTypeEnum,
        Binary: 'BINARY' as ColumnTypeEnum,
        Varbinary: 'VARBINARY' as ColumnTypeEnum,
        Longvarbinary: 'LONGVARBINARY' as ColumnTypeEnum,
        Bytea: 'BYTEA' as ColumnTypeEnum,
        Blob: 'BLOB' as ColumnTypeEnum,
        Tinyblob: 'TINYBLOB' as ColumnTypeEnum,
        Mediumblob: 'MEDIUMBLOB' as ColumnTypeEnum,
        Longblob: 'LONGBLOB' as ColumnTypeEnum
    };
}


